services:
  sim4cd:
    image: ros_noetic_sim4cd
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sim4cd_container
    network_mode: "host"                  # Use host network for ROS
    environment:
      - DISPLAY=$DISPLAY                                      # Pass the display environment variable to allow GUI applications to connect to the X server
      - QT_X11_NO_MITSHM=1                                    # Prevent shared memory issues with Qt applications running in Docker
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all} # Specify which GPUs are visible; default to all GPUs
      - NVIDIA_DRIVER_CAPABILITIES=all                        # Ensure full graphics driver capabilities, necessary for rendering applications like RViz
      - LIBGL_ALWAYS_INDIRECT=1                               # Enable indirect OpenGL rendering, often required when running in virtualized or containerized environments
      # - XAUTHORITY=/tmp/.docker.xauth                         # Use X11 authorization with xauth for secure access to the X server
    runtime: nvidia                       # Use NVIDIA runtime for GPU acceleration
    privileged: true                      # Needed for access to certain system resources
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix              # Allow GUI apps inside the container to connect to the host's X server
      # - ./logs:/root/catkin_ws/logs                # Mount local folder to store logs generated by the container
      # - /tmp/.docker.xauth:/tmp/.docker.xauth:rw   # Share the X11 authorization file for secure access to the X server
    stdin_open: true                      # Keep stdin open (for interactive shell)
    tty: true                             # Allocate a pseudo-TTY for the container
    command: /bin/bash                    # Start an interactive bash session
